# this cfg will run the reconstruction of:
# digis (strips+pixels), clusters (strips+pixels), rechits (strips+pixels),
# seeds, clouds, trackcandidates, tracks

process FromHitsToTracksAndMonitoring = 
{

  # MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
 
  # magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # geometry (switched to tracker only geometry)
  # include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  es_source = XMLIdealGeometryESSource 
  {
    FileInPath GeometryConfiguration="Geometry/TrackerSimData/data/trackerSimConfiguration.xml"
    string rootNodeName = ""
  }

  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # strip parameter estimator service for SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"

  # roads             
  include "RecoTracker/RoadMapESSource/data/RoadMapESSource.cfi"

  service = RandomNumberGeneratorService
  {
    untracked uint32 sourceSeed = 98765
  }

  # tracer service - very verbose - useful for debugging only
#  service = Tracer { untracked string indention = "$$"}

  # source of simulated hits
  source = PoolSource
  {
    untracked vstring fileNames = {"file:/afs/cern.ch/cms/Releases/CMSSW/prerelease/CMSSW_0_7_0_pre3/src/DQM/SiStripMonitorCluster/test/SingleMuonSimHits.root"}
    untracked int32 maxEvents = 10
  }

  #include pixDigitizer
  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"

  #include  pixClusterizer
  include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"

  #include pixRecHitConverter
  include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"

  # SiStripDigitizer
  include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"

  # include SiStripClusterizer
  include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"

  # include SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"

  # RoadSearchSeedFinder
#  include "RecoTracker/RoadSearchSeedFinder/data/RoadSearchSeedFinder.cfi"
  include "RecoTracker/RoadSearchSeedFinder/data/RoadSearchSeeds.cfi"

  # RoadSearchCloudMaker
#  include "RecoTracker/RoadSearchCloudMaker/data/RoadSearchCloudMaker.cfi"
  include "RecoTracker/RoadSearchCloudMaker/data/RawRoadSearchClouds.cfi"

  # RoadSearchCloudCleaner
#  include "RecoTracker/RoadSearchCloudCleaner/data/RoadSearchCloudCleaner.cfi"
  include "RecoTracker/RoadSearchCloudCleaner/data/CleanRoadSearchClouds.cfi"

  # RoadSearchTrackCandidateMaker
#  include "RecoTracker/RoadSearchTrackCandidateMaker/data/RoadSearchTrackCandidateMaker.cfi"
  include "RecoTracker/RoadSearchTrackCandidateMaker/data/RoadSearchTrackCandidates.cfi"

  # Analytical TrackProducer
  # include "RecoTracker/TrackProducer/data/FinalFitAnalytical.cfi"

  # TrackProducer with material
  include "RecoTracker/TrackProducer/data/FinalFitWithMaterial.cfi"
  replace TrackProducer.src = "RoadSearchTrackCandidates"

  module event_content_analyzer = EventContentAnalyzer {}

  service = DaqMonitorROOTBackEnd{}

  module monitortrackglobal = MonitorTrackGlobal
  {
    bool OutputMEsInRootFile = false
    string OutputFileName="test_monitortrackparameters.root"
  }

  module monitortrackresiduals = MonitorTrackResiduals
  {
    bool OutputMEsInRootFile = true
    string OutputFileName="test_monitortracks.root"
  }

  module out = PoolOutputModule 
  { 
    untracked string fileName = "test.root"
  }

// get SiStripFedCabling from sqlite_file
        es_source pool1 = PoolDBESSource {
                      VPSet toGet = {
                        { string record = "SiStripFedCablingRcd"
                          string tag = "SiStripFedCabling_v1"
                        }
                      }
                      bool loadAll = true
                      string connect = "sqlite_file:sistripfedcabling.db"
                      untracked string catalog = "file:SiStripFedCablingCatalog.xml"
                      string timetype = "runnumber"
                      untracked uint32 authenticationMethod = 1
                      untracked uint32 messagelevel = 10
                    }
                                                                                                                                                             
// produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
        es_module sistripconn = SiStripConnectivity {}

  path p = 
  {
    pixdigi,                                // pixel digis
    pixClust,                               // pixel clusters
    pixRecHitConverter,                     // pixel rechits
    stripdigi,                              // strip digis
    ThreeThresholdClusterizer,              // strip clusters
    LocalMeasurementConverter,              // strip rechits
    RoadSearchSeeds,                        // seeds
    RawRoadSearchClouds,                    // clouds
    CleanRoadSearchClouds,                  // clouds
    RoadSearchTrackCandidates,              // track candidates
    TrackProducer,                          // tracks
#    event_content_analyzer,                  // show objects/collections in the event - verbose
    monitortrackglobal,
    monitortrackresiduals
  }

#  endpath e = { out }
}

